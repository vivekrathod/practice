generate a binary search tree of minimal height given an ordered array of unique integers

public class Node
{
	public int Value;
	public Node Left;
	public Node Right;
}



Node GenMinHtTree(int[] array, int start, int end)
{
	
	Node node = new Node();
	if (start == end)
	{
		node.Right = null;
		node.Left = null;
		node.Value = array[start];
		return node;
	}
	else if ( end == start + 1)
	{
		node.Value = array[end];
		node.Right = null;
		node.Left = new Node();
		node.Left.Value = array[start];
		return node;
	}
	else // end > start + 1
	{
		int mid = (end - start)/2 + start;
		node.Value = array[mid];
		node.Right = GenMinHtTree(array, mid+1, end);
		node.Left = GenMinHtTree(array, start, mid - 1);
	}
	return node;
}

case 3:
array = {4, 7, 8, 9}
start = 0
end = 3
mid = 1
node.Value = 7
node.Right = GenMinHtTree(array, 2, 3) = node.Value = 9, node.Right = null, node.Left = 8
node.Left =  GenMinHtTree(array, 0, 0) = 4

case 1:
array = {4, 7, 8}
start = 0
end = 2
mid = 1
node.Value = 7
node.Right = 8
node.Left =  4

case 2:
array = {4, 7}
start = 0
end = 1

node.Value = 7
node.Right = null
node.Left =  4	


